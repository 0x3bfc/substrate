error[E0277]: the trait bound `pallet::Bar: pallet::_::_parity_scale_codec::codec::WrapperTypeDecode` is not satisfied
   --> $DIR/call_007.rs:20:37
    |
20  |         fn foo(origin: OriginFor<T>, bar: Bar) -> DispatchResultWithPostInfo {
    |                                           ^^^ the trait `pallet::_::_parity_scale_codec::codec::WrapperTypeDecode` is not implemented for `pallet::Bar`
    |
   ::: /home/thiolliere/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs:313:18
    |
313 |     fn decode<I: Input>(value: &mut I) -> Result<Self, Error>;
    |                  ----- required by this bound in `pallet::_::_parity_scale_codec::Decode::decode`
    |
    = note: required because of the requirements on the impl of `pallet::_::_parity_scale_codec::Decode` for `pallet::Bar`

error[E0277]: the trait bound `pallet::Bar: pallet::_::_parity_scale_codec::WrapperTypeEncode` is not satisfied
  --> $DIR/call_007.rs:1:1
   |
1  | / #[frame_support::pallet(Example)]
2  | | mod pallet {
3  | |     use frame_support::pallet_prelude::{ModuleInterface, DispatchResultWithPostInfo};
4  | |     use frame_system::pallet_prelude::{BlockNumberFor, OriginFor};
...  |
16 | |
17 | |     #[pallet::call]
   | |__________________^ the trait `pallet::_::_parity_scale_codec::WrapperTypeEncode` is not implemented for `pallet::Bar`
   |
   = note: required because of the requirements on the impl of `pallet::_::_parity_scale_codec::Encode` for `pallet::Bar`
   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0369]: binary operation `==` cannot be applied to type `&pallet::Bar`
  --> $DIR/call_007.rs:20:37
   |
20 |         fn foo(origin: OriginFor<T>, bar: Bar) -> DispatchResultWithPostInfo {
   |                                           ^^^
   |
   = note: an implementation of `std::cmp::PartialEq` might be missing for `&pallet::Bar`

error[E0277]: the trait bound `pallet::Bar: std::clone::Clone` is not satisfied
  --> $DIR/call_007.rs:20:37
   |
20 |         fn foo(origin: OriginFor<T>, bar: Bar) -> DispatchResultWithPostInfo {
   |                                           ^^^ the trait `std::clone::Clone` is not implemented for `pallet::Bar`
   |
   = note: required by `std::clone::Clone::clone`

error[E0277]: `pallet::Bar` doesn't implement `std::fmt::Debug`
  --> $DIR/call_007.rs:20:37
   |
20 |         fn foo(origin: OriginFor<T>, bar: Bar) -> DispatchResultWithPostInfo {
   |                                           ^^^ `pallet::Bar` cannot be formatted using `{:?}`
   |
   = help: the trait `std::fmt::Debug` is not implemented for `pallet::Bar`
   = note: add `#[derive(Debug)]` or manually implement `std::fmt::Debug`
   = note: required because of the requirements on the impl of `std::fmt::Debug` for `&pallet::Bar`
   = note: required for the cast to the object type `dyn std::fmt::Debug`
